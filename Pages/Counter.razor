@page "/counter"
@using Microsoft.EntityFrameworkCore
@using testBlazor.Data;
@using testBlazor.Data.services

@inject IClientService ClientService

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<table>
    <tr>
        <th>Название</th>
        <th>Описание</th>
    </tr>
    @foreach (var todo in todos)
    {
        <tr>
        <td>@todo.title</td>
        <td>@todo.description</td>
        </tr>
    }
</table>
<input placeholder="Название" @bind="newTodo" />
<input placeholder="Описание" @bind="todoDescription" />
<button @onclick="AddTodo">Add todo</button>

<ul>
    @foreach (var client in clients)
    {
        <li>@client.Email</li>
    }
</ul>

@code {
    private int currentCount = 0;

    [Parameter]
    public int IncrementAmount { get; set; } = 1;

    private void IncrementCount()
    {
        currentCount += IncrementAmount;
    }

    private List<TodoItem> todos = new();
    private string? newTodo;
    private string? todoDescription;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { title = newTodo, description = todoDescription});
            newTodo = string.Empty;
        }
    }

    public IEnumerable<Client> clients { get; set; }
    protected override void OnInitialized()
    {
        clients = ClientService.GetClients();
    }

    //List<Data.Client> clients = new List<Data.Client>();
    //protected override async Task OnInitializedAsync()
    //{
    //    await base.OnInitializedAsync();

    //    clients = await context.Clients.ToListAsync();

       
    //}
}
