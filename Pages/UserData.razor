@page "/user"

@using Microsoft.EntityFrameworkCore
@using testBlazor.Data;
@using testBlazor.Data.services
@using System.Text;

@inject IClientService ClientService
@inject IClientAddressService AddressService
@inject NavigationManager nav;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorageService;

@attribute [Authorize]

<html>

<head>
    <title>Пользователь</title>
    <link rel="stylesheet" href="UserData.razor.css">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700&amp;subset=cyrillic" rel="stylesheet">
</head>

<body>
    <div id="mainDiv">
        <div id="forms-personal">
            <div class="dataContainer">
                <h3>Личные данные</h3>
                <div class="innerDiv">
                    <div class="inputDiv">
                        <label>Фамилия</label>
                        <input type="text" @bind="client.Surname" />
                    </div>
                    <div class="inputDiv">
                        <label>Имя</label>
                        <input type="text" @bind="client.Name" />
                    </div>
                    <div class="inputDiv">
                        <label>Отчество</label>
                        <input type="text" @bind="client.Patronymic" />
                    </div>
                </div>
                <div class="innerDiv">
                    <div class="inputDiv">
                        <label>Номер телефона</label>
                        <input type="text" @bind="client.PhoneNumber" />
                    </div>
                    <div class="inputDiv">
                        <label>Электронная почта</label>
                        <input type="text" @bind="client.Email" />
                    </div>
                </div>
            </div>
            <input type="button" name="save-personal-data" value="Сохранить" @onclick="updateUser"></input>
            <form @onsubmit="addAddress">
                <div class="dataContainer">
                    <h3>Адрес</h3>
                    <div class="innerDiv">
                        <div class="inputDiv">
                            <label>Город</label>
                            <input type="text" @bind="address.City" required />
                        </div>
                        <div class="inputDiv">
                            <label>Улица</label>
                            <input type="text" @bind="address.Street" required />
                        </div>
                        <div class="inputDiv">
                            <label>Дом</label>
                            <input type="text" @bind="address.Building" required />
                        </div>
                    </div>
                    <div class="innerDiv">
                        <div class="inputDiv">
                            <label>Подъезд</label>
                            <input type="text" @bind="address.House" required />
                        </div>
                        <div class="inputDiv">
                            <label>Квартира</label>
                            <input type="text" @bind="address.Apartment" required />
                        </div>
                    </div>

                </div>
                <input type="submit" name="save-personal-data" value="Добавить" />
            </form>

        </div>
        <div class="dataContainer" hidden="@hidden">
            <div class="addressList">
                <h3>Список адресов:</h3>
                <ul>
                    @if (!hidden) @foreach (var adrs in addresses)
                        {
                            <li>
                                <label>
                                    @adrs.City
                                    ,
                                </label>
                                <label>
                                    @adrs.Street
                                    ,
                                </label>
                                <label>
                                    @adrs.Building
                                    ,
                                </label>
                                <label>
                                    @adrs.House
                                    ,
                                </label>
                                <label>
                                    @adrs.Apartment
                                    ,
                                </label>
                            </li>
                        }
                </ul>
            </div>
        </div>
    </div>
</body>

</html>

@code {
    public string email { get; set; } = "";
    public bool hidden { get; set; } = true;
    Client? client = new Client();
    ClientAddress? address = new ClientAddress();
    List<ClientAddress> addresses = new List<ClientAddress>();

    public void updateUser()
    {
        ClientService.updateClientByEmail(email, client);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var result = await sessionStorageService.GetItemAsync<string>("email");
            if (result != null)
            {
                hidden = true;
                email = result;
                client = ClientService.getSingleClientByEmail(email);
                if (client != null)
                {
                    addresses = AddressService.GetClientAddress(client.ClientId);

                    if (addresses.GetEnumerator().MoveNext())
                        hidden = false;
                }
                StateHasChanged();
            }
        }
        catch (Exception ex) { }

    }

    public void addAddress()
    {
        try
        {
            address.ClientId = client.ClientId;
            address.Client = client;
            AddressService.insertClientAddress(address);
            hidden = false;
            nav.NavigateTo(nav.Uri, forceLoad: true);
        }
        catch (Exception ex) { }
    }

}
