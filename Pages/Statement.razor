@page "/statement"

@using Microsoft.EntityFrameworkCore
@using testBlazor.Data;
@using testBlazor.Data.Models;
@using testBlazor.Data.services
@using System.Text;
@using testBlazor.Data.security;

@inject IClientService clientService;
@inject IRequestService requestService;
@inject NavigationManager nav;
@inject AuthenticationStateProvider authenticationStateProvider;
@inject IRequestService requestService;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorageService;

@attribute [Authorize]

<div id="main_div">
    <div id="sidebar">
        <div class="sidebar-name">Создание заявки</div>
        <div class="sidebar-name">История</div>
    </div>
    <div class="position-form-menu">
        <div class="form-background">
            <div id="table">
                <div id="name_column">
                    <div class="Column" name="right_line"><div class="Value_table">Дата</div></div>
                    <div class="Column" name="right_line"><div class="Value_table">Статус</div></div>
                    <div class="Column" name="right_line"><div class="Value_table">Тема</div></div>
                    <div class="Column"><div class="Value_table">Адрес</div></div>
                </div>                
                    @foreach (var rq in requests)
                    {
                        <div class="Row">
                        <div class="Column" name="right_line"><div class="Value_table">@rq.Date.Value.ToShortDateString()</div></div>
                        <div class="Column" name="right_line"><div class="Value_table">@rq.Status</div></div>
                        <div class="Column" name="right_line"><div class="Value_table">@rq.Name</div></div>
                        <div class="Column"><div class="Value_table">@rq.Address</div></div>
                        </div>
                    }           
            </div>
        </div>
    </div>
    <div id="position_form_menu">
        <div id="form_background">
            <EditForm Model="@statementModel" OnSubmit="@handleStatementForm">
                <div id="nameForm">Новая заявка</div>
                <div id="address">
                    <div><label for="">Улица *</label><br><input class="AddressFirstWidth" name="" type="text" required @bind-value="statementModel.street"></div>
                    <div><label for="">Дом *</label><br><input class="AddressThirdWidth" name="" type="text" required @bind-value="statementModel.building"></div>
                    <div><label for="">Корпус</label><br><input class="AddressThirdWidth" name="" type="text" @bind-value="statementModel.house"></div>
                    <div><label for="">Квартира *</label><br><input class="AddressThirdWidth" name="" type="text" required @bind-value="statementModel.apartment"></div>
                    <div><label for="">Фамилия *</label><br><input class="AddressFirstWidth" name="" type="text" required @bind-value="statementModel.surname"></div>
                    <div><label for="">Имя *</label><br><input class="AddressSecondWidth" name="" type="text" required @bind-value="statementModel.name"></div>
                    <div><label for="">Отчество *</label><br><input class="AddressSecondWidth" name="" type="text" required @bind-value="statementModel.patronymic"></div>
                    <div><label for="">Телефон</label><br><input class="AddressFirstWidth" name="" type="text" @bind-value="statementModel.phoneNumber"></div>
                    <div><label for="">Электронная почта *</label><br><input class="AddressFirstWidth" name="" type="text" required @bind-value="statementModel.email"></div>
                    <div><label for="">Тема Обращения *</label><br><input class="AddressFirstWidth" name="" type="text" required @bind-value="statementModel.subject"></div>
                    <div><label for="comment">Ваше Сообщение *</label><br><textarea id="comment" name="comment" @bind="statementModel.comment"></textarea></div>
                </div>
                <input class="Submission" type="submit" name="send" value="Отправить" required>
            </EditForm>
            <div id="obligatory_field">* Обязательное поле</div>
        </div>
        </div>
</div>
@code {

    Client? client = new Client();

    Request? request = new Request();

    StatementModel statementModel = new();

    public string email { get; set; } = "";

    List<Request> requests = new();

    //Пока не нужно, но может пригодится 
    //public int? highestRequestNumber { get; set; } = 0;
    //highestRequestNumber = requestService.getHighestRequestNumber() + 1;

    public void changeData()
    {
        nav.NavigateTo("/user");
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await sessionStorageService.GetItemAsync<string>("email");
        if (result!= null)
        {
            try
            {
                email = result;
                client = clientService.getSingleClientByEmail(email);
                statementModel.email = email;
                statementModel.name = client.Name;
                statementModel.surname = client.Surname;
                statementModel.patronymic = client.Patronymic;
                statementModel.phoneNumber = client.PhoneNumber;          
                StateHasChanged();
                requests = requestService.getRequestsByClientId(client.ClientId);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"{ex.Message}");
            }
        }

 

    }

    private async void handleStatementForm()
    {
        request.Date = DateTime.Now;
        request.Status = "Принята";
        request.Client = client;
        request.ClientId = client.ClientId;
        request.Address = statementModel.street + ", " + statementModel.building + ", " + statementModel.house + ", " + statementModel.apartment;
        request.Name = statementModel.subject;
        request.Comment = statementModel.comment;
        requestService.insertRequest(request);
    }
}
