@page "/Statement"

@using Microsoft.EntityFrameworkCore
@using testBlazor.Data;
@using testBlazor.Data.services
@using System.Text;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject ProtectedSessionStorage ProtectedSessionStore
@inject IClientService ClientService
@inject NavigationManager nav;

<div id="main-div">
    <div id="sidebar">
        <div id="sidebar-name">История</div>
        <div class="sidebar-obj">
            <div class="sidebar-month">Март</div>
            <div class="sidebar-year">2023</div>
        </div>
        <div class="sidebar-obj">
            <div class="sidebar-month">Февраль</div>
            <div class="sidebar-year">2023</div>
        </div>
    </div>
    <div id="position-form-menu">
        <div id="higher-menu">
            <div class="tabs" @onclick="goToMeterReadings">Показания</div>
            <div class="tabs" name="this-page">Заявки</div>
            <div class="tabs">Услуги</div>
            <div class="tabs"><a href='mailto:gptevcat@gmail.com'>Служба поддержки</a></div>
            <div id="profile">
                <div id="name-profile">@email</div>
                <div id="menu-profile">
                    <div @onclick="changeData">Изменить данные</div>
                    <div @onclick="logout">Выйти</div>
                </div>
            </div>
        </div>
        <div id="form-background">
            <form>
                <div id="name-form">Заявка №(число)</div>
                <div id="address">
                    <div><label for="">Улица *</label><br><input class="address-first-width" name="" type="text" required></div>
                    <div><label for="">Дом *</label><br><input class="address-third-width" name="" type="text" required></div>
                    <div><label for="">Корпус</label><br><input class="address-third-width" name="" type="text" required></div>
                    <div><label for="">Квартира *</label><br><input class="address-third-width" name="" type="text" required></div>
                    <div><label for="">Фамилия *</label><br><input class="address-first-width" name="" type="text" required></div>
                    <div><label for="">Имя *</label><br><input class="address-second-width" name="" type="text" required></div>
                    <div><label for="">Отчество *</label><br><input class="address-second-width" name="" type="text" required></div>
                    <div><label for="">Телефон</label><br><input class="address-first-width" name="" type="text" required></div>
                    <div><label for="">Электронная почта *</label><br><input class="address-first-width" name="" type="text" required></div>
                    <div><label for="">Тема Обращения *</label><br><input class="address-first-width" name="" type="text" required></div>
                    <div><label for="comment">Ваше Сообщение *</label><br><textarea id="comment" name="comment"></textarea></div>
                    <div id="load-file"><label for="file">Файл</label><br><img id="ico"><input type="file" name="file" value="выбрать файл"></div>
                </div>
                <input type="button" name="send" value="Отправить" required>
            </form>
            <div id="obligatory-field">* Обязательное поле</div>
        </div>
    </div>
</div>
@code {

	Client? client = new Client();
	public string email { get; set; } = "";

	protected override async Task OnInitializedAsync()
	{
		var result = await ProtectedSessionStore.GetAsync<string>("email");
		if (result.Success)
		{
			email = result.Value;
			client = ClientService.getSingleClientByEmail(email);
			StateHasChanged();
		}

	}

	public void changeData()
	{
		nav.NavigateTo("/UserData");
	}

	public void goToMeterReadings()
	{
		nav.NavigateTo("/MeterReadings");
	}

	public void logout()
	{
		ProtectedSessionStore.SetAsync("email", "");
		nav.NavigateTo("/");
	}
}
