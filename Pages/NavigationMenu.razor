@using testBlazor.Data.security;

@inject NavigationManager nav;
@inject AuthenticationStateProvider authenticationStateProvider;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorageService;

@attribute [Authorize]

<div id="position-form-menu">
    <div id="higher-menu">
        <div class="tabs" @onclick="toMeterReadings">
            Показания
        </div>
        <div class="tabs" @onclick="toStatement">
            Заявки
        </div>
        <div class="tabs">
            Служба поддержки
        </div>
    </div>
    <div id="user-menu">
        <div class="tabs" id="user-profile" @onclick="changeData">
            @email
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="tabs" id="logout" @onclick="logout">
                    Выйти
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private string email { get; set; } = "";

    protected async override Task OnInitializedAsync()
    {
        try
        {
            email = await sessionStorageService.GetItemAsync<string>("email");
            StateHasChanged();
        }catch (Exception ex){}
    }

    public void changeData()
    {
        nav.NavigateTo("/user");
    }

    public void logout()
    {
        ((CustomAuthenticationStateProvider)authenticationStateProvider).userNotAuthorized();

        nav.NavigateTo("/");
    }

    public void login()
    {
        nav.NavigateTo("/login");
    }

    public void toStatement()
    {
        nav.NavigateTo("/statement_create");
    }

    public void toMeterReadings()
    {
        nav.NavigateTo("/meter_readings");
    }

}
